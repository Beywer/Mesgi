package ru.beywer.vaadin.ru.beywer.vaadin.consoleecho;

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.VerticalSplitPanel;

public class MainPage extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalSplitPanel verticalSplitPanel_1;
	@AutoGenerated
	private TextArea textArea_1;
	@AutoGenerated
	private Button button_1;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MainPage() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		
		PrintStream std = System.out;
		StreamCapturer capturer = new StreamCapturer(null, textArea_1, std);
		System.setOut(new PrintStream(capturer));
	}
 
	public class StreamCapturer extends OutputStream {

        private StringBuilder buffer;
        private String prefix;
        private PrintStream old;
		private TextArea consumer;

        public StreamCapturer(String prefix, TextArea consumer, PrintStream old) {
            this.prefix = prefix;
            buffer = new StringBuilder(128);
            if(prefix != null)
            	buffer.append("[").append(prefix).append("] ");
            this.old = old;
            this.consumer = consumer;
        }

        @Override
        public void write(int b) throws IOException {
            char c = (char) b;
            String value = Character.toString(c);
            buffer.append(value);
            if (value.equals("\n")) {
            	String oldValue = consumer.getValue();
            	consumer.setValue(oldValue + buffer.toString());
                buffer.delete(0, buffer.length());
                if(prefix != null)
                	buffer.append("[").append(prefix).append("] ");
            }
            old.print(c);
        }        
    }    
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// verticalSplitPanel_1
		verticalSplitPanel_1 = buildVerticalSplitPanel_1();
		mainLayout.addComponent(verticalSplitPanel_1);
		mainLayout.setExpandRatio(verticalSplitPanel_1, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalSplitPanel buildVerticalSplitPanel_1() {
		// common part: create layout
		verticalSplitPanel_1 = new VerticalSplitPanel();
		verticalSplitPanel_1.setImmediate(false);
		verticalSplitPanel_1.setWidth("600px");
		verticalSplitPanel_1.setHeight("600px");
		
		// button_1
		button_1 = new Button();
		button_1.setCaption("Button");
		button_1.setImmediate(true);
		button_1.setWidth("100.0%");
		button_1.setHeight("100.0%");
		verticalSplitPanel_1.addComponent(button_1);
		button_1.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				System.out.println("Hello");
				System.out.println(123);
				System.out.println(123.5f);
				System.out.print("Hello2  ");
				System.out.println(277.5d);
			}
		});
		
		// textArea_1
		textArea_1 = new TextArea();
		textArea_1.setImmediate(false);
		textArea_1.setWidth("100.0%");
		textArea_1.setHeight("100.0%");
		verticalSplitPanel_1.addComponent(textArea_1);
		
		return verticalSplitPanel_1;
	}

}
