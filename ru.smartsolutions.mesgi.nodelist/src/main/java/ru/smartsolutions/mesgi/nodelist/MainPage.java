package ru.smartsolutions.mesgi.nodelist;

import java.util.HashMap;
import java.util.Map;

import org.osgi.service.event.EventHandler;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.Push;
import com.vaadin.shared.communication.PushMode;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;

@Push(value=PushMode.MANUAL)
@SuppressWarnings("serial")
public class MainPage extends CustomComponent implements EventHandler {

	@AutoGenerated
	private VerticalLayout mainLayout;
	private TextArea textArea;
	private Map<String, String> nodes;
	private UI ui;

	public MainPage() {
		
		
		
		nodes = new HashMap<>();
		
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		textArea = new TextArea();
		textArea.setSizeFull();
		textArea.setValue("Test text");
//		textArea.setImmediate(true);
		System.out.println(textArea);
		
//		NodeHandler.setMainPage(this);
		
		mainLayout.addComponent(textArea);
	}
	
	
	
	public void setUi(UI ui) {
		this.ui = ui;
		System.out.println("SetUI  "  + ui);
		System.out.println("normal  "  + getUI());
		
	}
	
	public VerticalLayout getMainLayout() {
		return mainLayout;
	}



	public void setData(final String text){
		getUI().access(new Runnable() {
			
			@Override
			public void run() {
				System.out.println("This main page is RUUUUUNNNN!!!!");
				textArea.setValue(text);
				System.out.println(textArea);
				MainPage.this.getUI().push();
			}
		});
	}

	@AutoGenerated
	private void buildMainLayout() {
			mainLayout = new VerticalLayout();
			mainLayout.setImmediate(false);
			mainLayout.setWidth("60%");
			mainLayout.setHeight("60%");
			mainLayout.setMargin(true);
			
			setWidth("100.0%");
			setHeight("100.0%");
	}
	
	private String getText(){
		StringBuilder text = new StringBuilder();
		for(String key : nodes.keySet()) {
			text.append(key + "  " + nodes.get(key) + "\n");
		}
		return text.toString();
	}

	@Override
	public void handleEvent(org.osgi.service.event.Event event) {
		
		String ip = (String) event.getProperty("IPv6");
		String avilability = (String) event.getProperty("Availability");
		nodes.put(ip, avilability);
		
//		if(ui!=null)
			ui.access(new Runnable() {
		
				@Override
				public void run() {
//					System.out.println("Run");
					textArea.setValue(getText());
//					mainLayout.addComponent(new Label("Hello!!"));
				}
			});
			
			ui.push();
	}


	
	//	
//	public class NodeHandler implements EventHandler {
//
//		private Map<String, String> nodes;
//		
//		private long time;
//		
//		public NodeHandler() {
//			nodes = new HashMap<String, String>();
//			time = System.currentTimeMillis();
//		}	
//		
//		public void setMainPage(MainPage mainPage){
//		}
//
//		@Override
//		public void handleEvent(org.osgi.service.event.Event event) {
//
//			String ip = (String) event.getProperty("IPv6");
//			String avilability = (String) event.getProperty("Availability");
//			nodes.put(ip, avilability);
//			if(System.currentTimeMillis() - time > 6000){
//				System.out.println(getText());
//				time = System.currentTimeMillis();
//			}
//			
//			setData(getText());
//			
//		}
//		
//		private String getText(){
//			StringBuilder text = new StringBuilder();
//			for(String key : nodes.keySet()) {
//				text.append(key + "  " + nodes.get(key) + "\n");
//			}
//			return text.toString();
//		}
//	}

}
